{
  "name": "roar-api",
  "version": "1.4.0",
  "description": "The Roar API.",
  "author": "Liongard",
  "repository": {
    "type": "git",
    "url": "TODO"
  },
  "license": "UNLICENSED",
  "main": "index.js",
  "scripts": {
    "tsc": "rimraf lib && tsc",
    "build": "yarn run clean && tsc && cp -R src/mail/templates lib/src/mail/templates && mkdir -p lib/apiV2/documentation && cp -R src/apiV2/documentation lib/apiV2/ && cp src/processes.json lib/. && cp -r src/rmmScripts lib/ && cp -vaR lib/src/. lib && rimraf lib/src",
    "local-provision": "cross-env NODE_ENV=development ts-node localProvision.ts",
    "clean-db": "psql -c \"drop database if exists roar\" && psql -c \"create database roar\"",
    "clean": "rimraf lib",
    "migrate:latest": "cross-env NODE_ENV=development AWS_REGION=us-west-2 DEBUG=roar* node ./lib/src/scripts/migrate.js migrate",
    "migrate:rollback": "cross-env NODE_ENV=development AWS_REGION=us-west-2 DEBUG=roar* node ./lib/src/scripts/migrate.js rollback",
    "migrate:down": "cross-env NODE_ENV=development AWS_REGION=us-west-2 DEBUG=roar* node ./lib/src/scripts/migrate.js down",
    "db:migrate:make": "./node_modules/.bin/knex migrate:make new_migration_template",
    "copy-node-modules": "cp -r node_modules ./lib/node_modules",
    "start-api": "tsc-watch --incremental --extendedDiagnostics --onSuccess \"cross-env NODE_ENV=development cross-env AWS_REGION=us-west-2 cross-env DEBUG=${DEBUG:=roar*} node ./lib/src/scripts/launch-dev.js\"",
    "start-scheduler": "tsc-watch --incremental --onSuccess \"cross-env NODE_ENV=development cross-env AWS_REGION=us-west-2 cross-env DEBUG=${DEBUG:=roar*} node ./lib/src/scripts/launch-scheduler.js\"",
    "debug-scheduler": "cross-env NODE_ENV=development cross-env AWS_REGION=us-west-2 cross-env DEBUG=${DEBUG:=roar*} node inspect ./lib/src/scripts/launch-scheduler.js",
    "start-consumer": "nodemon --watch src --exec NODE_ENV=development AWS_REGION=us-west-2 DEBUG=roar* ts-node src/scripts/consumer.ts",
    "start-callbacks": "nodemon --watch src --exec NODE_ENV=development AWS_REGION=us-west-2 DEBUG=roar* ts-node src/scripts/callbacks.ts",
    "debug-api": "cross-env NODE_ENV=development cross-env AWS_REGION=us-west-2 cross-env DEBUG=roar* node debug -r ts-node/register src/scripts/launch.ts",
    "debug-api-knex": "cross-env NODE_ENV=development cross-env AWS_REGION=us-west-2 cross-env DEBUG=knex:*,roar* node debug -r ts-node/register src/scripts/launch.ts",
    "debug-consumer": "cross-env NODE_ENV=development AWS_REGION=us-west-2 DEBUG=roar* ts-node debug src/scripts/consumer.ts",
    "debug-callbacks": "cross-env NODE_ENV=development AWS_REGION=us-west-2 DEBUG=roar* ts-node debug src/scripts/callbacks.ts",
    "eslint": "eslint src",
    "start-test": "ts-node-dev --transpileOnly src/scripts/launch.ts --exec cross-env NODE_ENV=development cross-env AWS_REGION=us-west-2 cross-env DEBUG=roar*",
    "lint": "eslint \"**/**/*.ts\" --fix",
    "functional-tests": "cross-env NODE_ENV=development RUNNING_TESTING=true AWS_REGION=us-west-2 mocha -r ts-node/register --file tests/functional/setup-functional-tests.ts 'tests/functional/**/*.test.ts' --exit",
    "integration-tests": "cross-env REUSE_TEST_CONTAINER=true NODE_ENV=development RUNNING_TESTING=true AWS_REGION=us-west-2 BLUEBIRD_WARNINGS=0 mocha -r ts-node/register --file tests/integration/setup-integration-tests.ts 'tests/integration/**/*.test.ts' --exit",
    "unit-tests": "cross-env NODE_ENV=development RUNNING_TESTING=true AWS_REGION=us-west-2 mocha -r ts-node/register -r source-map-support/register 'tests/unit/**/*.test.ts'",
    "coverage": "cross-env NODE_ENV=development RUNNING_TESTING=true AWS_REGION=us-west-2 nyc --check-coverage false mocha -r ts-node/register -r source-map-support/register --file tests/integration/setup-integration-tests.ts 'tests/{integration,unit}/**/*.test.ts' --exit",
    "coverage-debug": "cross-env NODE_ENV=development RUNNING_TESTING=true AWS_REGION=us-west-2 mocha -r ts-node/register -r source-map-support/register --inspect-brk --file tests/integration/setup-integration-tests.ts 'tests/{integration,unit}/**/*.test.ts' --exit",
    "diff-coverage": "cross-env NODE_ENV=development RUNNING_TESTING=true AWS_REGION=us-west-2 nyc $(git --no-pager diff --name-only develop | grep \".ts\" | tr '\\n' ',' | sed 's/\\(.*\\),/\\1 /' | sed 's/,/ -n /g' | sed 's/^/-n /') --lines 5 mocha -r ts-node/register -r source-map-support/register --file tests/integration/setup-integration-tests.ts 'tests/{integration,unit}/**/*.test.ts' --exit",
    "generate-coverage-badges": "cross-env NODE_ENV=development RUNNING_TESTING=true AWS_REGION=us-west-2 node -r ts-node/register tests/generate-badges.ts",
    "deploy-lambda-functions-dev": "./deploy-lamba-functions.sh nemean",
    "deploy-lambda-functions-staging": "./deploy-lamba-functions.sh uru",
    "deploy-lambda-agent-service": "serverless deploy -c serverless.yml --region us-west-2",
    "snyk": "snyk test --dev",
    "build-consumers": "node --max_old_space_size=6144 ./node_modules/parallel-webpack/bin/run.js",
    "kill-debug": "kill -9 $(lsof -ti :9229)",
    "kill-api": "kill -9 $(lsof -ti :4321)",
    "kill-postgres": "kill -9 $(lsof -ti :5432)",
    "api-load-test": "yarn run artillery run -c ./tests/api-load/config.yaml",
    "api-load-render-html": "yarn run artillery report",
    "swagger-autogen": "node ./swagger-autogen-config.js"
  },
  "husky": {
    "hooks": {
      "pre-commit": "tsc && lint-staged && yarn run unit-tests && yarn run diff-coverage"
    }
  },
  "nyc": {
    "cache": false,
    "check-coverage": true,
    "extension": [
      ".ts"
    ],
    "exclude": [
      "knexfile.ts",
      "update-swagger.ts",
      "src/awsServices",
      "local*.ts",
      "db/**",
      "src/api/schemas/**",
      "tests/**",
      "scripts/**",
      "coverage/**",
      "node_modules/**",
      "**/*.d.ts",
      "**/*.test.ts"
    ],
    "sourceMap": true,
    "reporter": [
      "text",
      "json-summary",
      "text-summary"
    ],
    "all": true,
    "instrument": true
  },
  "devDependencies": {
    "@istanbuljs/nyc-config-typescript": "^0.1.3",
    "@types/archiver": "^3.1.0",
    "@types/bluebird": "^3.5.27",
    "@types/chai": "^4.2.11",
    "@types/chai-as-promised": "^7.1.2",
    "@types/chai-like": "^1.1.0",
    "@types/compression": "^1.0.1",
    "@types/debug": "^4.1.5",
    "@types/dockerode": "^2.5.24",
    "@types/express": "^4.17.2",
    "@types/express-winston": "^4.0.0",
    "@types/faker": "^4.1.12",
    "@types/flat": "0.0.28",
    "@types/helmet": "0.0.45",
    "@types/html-to-text": "^1.4.31",
    "@types/http-errors": "^1.6.3",
    "@types/jmespath": "^0.15.0",
    "@types/json2csv": "5.0.0",
    "@types/jsonwebtoken": "^8.3.5",
    "@types/lodash": "^4.14.149",
    "@types/luxon": "^1.25.0",
    "@types/mocha": "^8.0.1",
    "@types/multer": "^1.3.10",
    "@types/node": "^12.7.5",
    "@types/node-schedule": "^1.2.4",
    "@types/nodemailer": "^6.2.2",
    "@types/pg": "^7.14.3",
    "@types/qrcode": "^1.3.4",
    "@types/qs": "^6.9.0",
    "@types/requestretry": "^1.12.5",
    "@types/sequelize": "^4.28.8",
    "@types/sinon-express-mock": "^1.3.9",
    "@types/speakeasy": "^2.0.5",
    "@types/string-pixel-width": "^1.7.0",
    "@types/unidecode": "^0.1.1",
    "@typescript-eslint/eslint-plugin": "^4.1.1",
    "@typescript-eslint/parser": "^4.1.1",
    "artillery": "^1.6.2",
    "badge-maker": "^3.2.0",
    "chai": "^4.2.0",
    "chai-as-promised": "^7.1.1",
    "chai-http": "^4.3.0",
    "chai-like": "^1.1.1",
    "copy-webpack-plugin": "^6.2.0",
    "cross-env": "^5.2.0",
    "dockerode": "^3.3.0",
    "eslint": "^7.9.0",
    "eslint-config-prettier": "^6.11.0",
    "eslint-plugin-prettier": "^3.1.4",
    "eslint-plugin-roar-api": "file:./eslint",
    "extract-comments": "^1.0.0",
    "faker": "^4.1.0",
    "husky": "^4.0.0",
    "lint-staged": "^12.3.8",
    "mocha": "^9.1.2",
    "nock": "^13.0.11",
    "nodemon": "^2.0.4",
    "nyc": "^15.1.0",
    "parallel-webpack": "^2.6.0",
    "prettier": "^2.0.5",
    "rimraf": "^3.0.1",
    "sequelize-cli": "^6.2.0",
    "serverless-offline": "8.0.0",
    "serverless-plugin-typescript": "^2.0.0",
    "sinon": "^9.1.0",
    "sinon-express-mock": "^2.2.1",
    "snyk": "^1.1053.0",
    "swagger-autogen": "^2.18.8",
    "ts-loader": "^8.0.4",
    "ts-node": "^8.4.1",
    "ts-node-dev": "^1.1.7",
    "tsc-watch": "^4.2.9",
    "typescript": "^4.6.3",
    "webpack": "^5.0.0",
    "webpack-cli": "^3.3.12",
    "webpack-node-externals": "^2.5.2"
  },
  "engines": {
    "node": ">=4"
  },
  "dependencies": {
    "@authenio/samlify-node-xmllint": "^2.0.0",
    "@breejs/later": "^4.0.2",
    "@liongard/roar-path": "^0.1.0",
    "@types/bcryptjs": "^2.4.2",
    "@types/he": "^1.1.1",
    "JSONStream": "^1.3.5",
    "ajv": "^6.12.3",
    "archiver": "^4.0.2",
    "aws-sdk": "^2.1082.0",
    "axios": "^1.6.4",
    "bcryptjs": "^2.4.3",
    "bluebird": "^3.3.3",
    "body-parser": "^1.15.0",
    "bottleneck": "^2.19.5",
    "compression": "^1.6.1",
    "connect-slashes": "^1.3.1",
    "cookie-parser": "^1.4.1",
    "cors": "^2.8.1",
    "csvtojson": "^1.1.1",
    "dateformat": "^3.0.3",
    "debug": "^3.1.0",
    "diff": "^4.0.1",
    "difflib": "^0.2.4",
    "event-dispatch": "^0.4.1",
    "exceljs": "3.10.0",
    "express": "^4.13.4",
    "express-winston": "^4.0.5",
    "fast-xml-parser": "^3.12.12",
    "flat": "^5.0.2",
    "fp-ts": "^2.8.1",
    "fp-ts-contrib": "^0.1.16",
    "fuse.js": "^3.2.1",
    "he": "^1.2.0",
    "helmet": "^3.13.0",
    "html-to-text": "^6.0.0",
    "http-errors": "^1.6.2",
    "http-status": "^1.3.2",
    "humanize-duration": "^3.27.3",
    "io-ts": "^2.2.9",
    "io-ts-types": "^0.5.9",
    "ipaddr.js": "2.0.1",
    "isemail": "^3.2.0",
    "jsbi": "^3.1.1",
    "json2csv": "5.0.0",
    "jsonschema": "^1.4.0",
    "jsonwebtoken": "^8.3.0",
    "knex": "^1.0.7",
    "lodash": "^4.17.21",
    "luxon": "^1.25.0",
    "magic-globals": "^0.9.1",
    "moment": "^2.29.2",
    "monocle-ts": "^2.3.3",
    "multer": "1.4.5-lts.1",
    "newtype-ts": "^0.3.4",
    "node-schedule": "^1.3.2",
    "nodemailer": "6.6.1",
    "object-mapper": "^5.0.0",
    "parenthesis": "^3.1.3",
    "pascal-case": "^3.1.1",
    "pg": "^8.0.3",
    "pg-query-stream": "^4.2.1",
    "puppeteer": "15.5.0",
    "qrcode": "^0.9.0",
    "qs": "^6.5.1",
    "rate-limiter-flexible": "^2.3.6",
    "reflect-metadata": "^0.1.13",
    "request": "2.88.2",
    "requestretry": "^7.0.2",
    "samlify": "2.8.6",
    "sequelize": "^6.19.1",
    "source-map-support": "^0.5.19",
    "speakeasy": "^2.0.0",
    "sqs-consumer": "^5.5.0",
    "string-pixel-width": "^1.10.0",
    "swagger-spec-express": "^2.0.20",
    "ts-mockito": "^2.6.1",
    "typedi": "^0.8.0",
    "ua-parser-js": "^0.7.24",
    "unidecode": "^0.1.8",
    "uuid": "^8.3.2",
    "winston": "^3.3.3",
    "winston-aws-cloudwatch": "^3.0.0",
    "xml2js": "^0.4.23",
    "xmlbuilder2": "^2.4.0"
  },
  "resolutions": {
    "archiver/tar-stream/bl": "4.0.3",
    "knex/liftoff/findup-sync/micromatch/braces": "2.3.2",
    "nodemon/undefsafe": "2.0.3",
    "brute-knex/knex": "0.21.5",
    "**/lodash": "4.17.21",
    "copy-webpack-plugin/cacache/tar": "6.1.9",
    "husky/find-versions/semver-regex": "3.1.4",
    "artillery/socket.io-client/engine.io-client/xmlhttprequest-ssl": "1.6.2",
    "eslint/ajv": "6.12.3",
    "dockerode/tar-fs/tar-stream/bl": "4.0.3",
    "request/http-signature/jsprim/json-schema": "0.4.0",
    "**/moment": "2.29.4",
    "artillery/cheerio/cheerio-select/css-select/nth-check": "2.0.1",
    "mocha/yargs/y18n": "4.0.1",
    "chai/pathval": "1.1.1",
    "sequelize-cli/js-beautify": "1.14.1",
    "eslint/table/ajv": "6.12.3",
    "webpack/browserslist": "4.16.5",
    "nyc/yargs/y18n": "4.0.1",
    "copy-webpack-plugin/cacache/ssri": "8.0.1",
    "serverless-offline/node-schedule/cron-parser/moment-timezone/moment": "2.29.2",
    "artillery/async": "2.6.4",
    "serverless-offline/portfinder/async": "2.6.4",
    "sequelize/validator": "13.7.0",
    "swagger-spec-express/ajv": "6.12.3",
    "swagger-spec-express/async": "3.2.2"
  },
  "homepage": "TODO",
  "directories": {
    "test": "test"
  }
}
